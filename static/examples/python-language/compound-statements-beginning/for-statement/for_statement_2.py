#!/usr/bin/env python3

a = 'a', 'b', 'c', 'd', 'e'  # Объявляем коллекцию (в данном случае — последовательность — кортеж)

# Первый вариант: прохождение по элементам коллекции с помощью итератора
b = iter(a)                  # Инициализируем итератор коллекции a
i = next(b)                  # Получаем первый элемент коллекции    (элемент с индексом 0)
print(i)                     # Выводим первый элемент коллекции     (элемент с индексом 0)
i = next(b)                  # Получаем второй элемент коллекции    (элемент с индексом 1)
print(i)                     # Выводим второй элемент коллекции     (элемент с индексом 1)
i = next(b)                  # Получаем третий элемент коллекции    (элемент с индексом 2)
print(i)                     # Выводим третий элемент коллекции     (элемент с индексом 2)
i = next(b)                  # Получаем четвёртый элемент коллекции (элемент с индексом 3)
print(i)                     # Выводим четвёртый элемент коллекции  (элемент с индексом 3)
i = next(b)                  # Получаем пятый элемент коллекции     (элемент с индексом 4)
print(i)                     # Выводим пятый элемент коллекции      (элемент с индексом 4)
print('Обработка завершена')

# Второй вариант: бесконечный цикл while с итератором
# Поскольку мы уже прошли по всем элементам коллекции a, заново инициализируем итератор,
# коллекции a, чтобы внутренний счётчик итератора опять начинался с нуля.
# Если продолжить использовать уже пройденный итератор, будет возбуждено исключение типа StopIteration
b = a.__iter__()             # Инициализируем итератор. Это уже другой итератор (заново созданный объект)
flag = True                  # Объявляем вспомогательную переменную для выхода из бесконечного цикла
# Начало цикла
while flag:                  # Объявляем бесконечный цикл
    try:                     # Пытаемся выполнить инструкции на следующих двух строках
        i = b.__next__()     # Получаем текущий элемент коллекции
        print(i)             # Выводим текущий элемент коллекции
    except StopIteration:    # Если возникло исключительное событие, потому что закончились элементы коллекции,
        flag = False         # Меняем значение переменной, в результате чего цикл будет остановлен
else:                        # Переменная flag нужна, чтобы не останавливать цикл принудительно инструкцией break,
    print('Цикл завершён')   # чтобы создать возможность выполниться условию else
# Конец цикла
# Выведет:
# a
# b
# c
# d
# e
# Цикл завершён
