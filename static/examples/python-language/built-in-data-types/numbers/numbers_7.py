#!/usr/bin/env python3

a = 10j              # Переменную a связываем с объектом комплексного числа с нулевой действительной частью
print(a)             # Выводим значение объекта, связанного с переменной a. Выведет: 10j
print(type(a))       # Выводим тип объекта, связанного с переменной a. Выведет: <class 'complex'>
print(a.real)        # Выводим действительную часть. Выведет: 0.0
print(a.imag)        # Выводим мнимую часть. Выведет: 10.0
print(type(a.real))  # Выводим тип действительной части объекта, связанного с переменной a. Выведет:  <class 'float'>
print(type(a.imag))  # Выводим тип мнимой части объекта, связанного с переменной a. Выведет: <class 'float'>

b = 3+10j            # Переменную b связываем с объектом комплексного числа с ненулевой действительной частью
print(b)             # Выводим значение объекта, связанного с переменной a. Выведет: (3+10j)
print(b.real)        # Выводим действительную часть. Выведет: 3.0
print(b.imag)        # Выводим мнимую часть. Выведет: 10.0

print(a + b)         # Выводим сумму комплексных чисел a и b. Выведет: (3+20j)

print((3+10j).real)  # ВЕРНО: обращение к числу через выражение со скобками. Выводим действительную часть. Выведет: 3.0
print((3+10j).imag)  # ВЕРНО: обращение к числу через выражение со скобками. Выводим мнимую часть. Выведет: 10.0

# print(3+10j.real)  # НЕВЕРНО: обращение к числу через выражение без скобок. Выводим действительную часть. Выведет: 3.0
# print(3+10j.imag)  # НЕВЕРНО: обращение к числу через выражение без скобок. Выводим мнимую часть. Выведет: 13.0

a = complex()                 # Инициализация комплексного числа через вызов функции complex() без аргументов
print(a)                      # Комплексное число с нулевой действительной и нулевой мнимой частью. Выведет: 0j

a = complex(-128.555)         # Инициализация комплексного числа через вызов функции complex() с одним аргументом — числом
print(a)                      # Комплексное число с нулевой мнимой частью. Выведет: (-128.555+0j)

a = complex(-128, 10.5)       # Инициализация комплексного числа через вызов функции complex() с двумя аргументами — числами
print(a)                      # Выведет: (-128+10.5j)

a = complex('-0128')           # Инициализация комплексного числа через вызов функции complex() с одним аргументом — строкой с ведущим нулём
print(a)                      # Выведет: (-128+0j)

# a = complex('-0b10000000')  # Попытка передать функции complex() строку с представлением числа в двоичной системе счисления. ValueError: complex() arg is a malformed string
# a = complex('-128', 10.5)   # Попытка передать функции complex() первым аргументом строку, вторым аргументом — число. TypeError: complex() can't take second arg if first is a string

a = complex(-128j, 10j)       # Инициализация комплексного числа на основе пары комплексных чисел
print(a)                      # Выведет: (-10-128j)
print(a.real)                 # Выведет: -10.0
print(a.imag)                 # Выведет: -128.0
# a.real = -5                 # Попытка изменить свойство, доступное только для чтения. AttributeError: readonly attribute
