#!/usr/bin/env python3

import decimal           # Импорт модуля decimal стандартной библиотеки
import fractions         # Импорт модуля fractions стандартной библиотеки

a = 10_000_000           # Объявление целого числа через литерал десятичного числа c символом подчёркивания
print(a)                 # Выведет: 10000000

# a = 10_000__000        # Попытка использовать два символа подчёркивания подряд. SyntaxError: invalid decimal literal
# a = 020                # Попытка записать число с ведущим нулём. SyntaxError: leading zeros in decimal integer literals are not permitted; use an 0o prefix for octal integers

a = 0x989680             # Объявление целого числа через литерал шестнадцатеричного числа
print(a)                 # Выведет: 10000000

a = int()                # Вызов без аргументов
print(a)                 # Выведет: 0

a = int(True)            # Вызов с одним аргументом: передача числа типа bool
print(a)                 # Выведет: 1

a = int(128.555)         # Вызов с одним аргументом: передача числа типа float
print(a)                 # Выведет: 128

b = 3+10j                # Инициализация комплексного числа с ненулевой действительной частью
# a = int(b)             # Нельзя получить целое число на основе комплексного числа. TypeError: can't convert complex to int
a = int(b.real)          # Вызов с одним аргументом: получение целого числа на основании действительной части комплексного числа
print(a)                 # Выведет: 3
a = int(b.imag)          # Вызов с одним аргументом: получение целого числа на основании мнимой части комплексного числа
print(a)                 # Выведет: 10

a = int('0128')          # Вызов с одним аргументом: передача строки с ведущим нулём, содержащей представление числа
print(a)                 # Выведет: 128

a = int('0128', 10)      # Вызов с двумя аргументами: строка с ведущим нулём и целое число 10
print(a)                 # Выведет: 128

a = int('128', 0)        # Вызов с двумя аргументами: строка и целое число 0
print(a)                 # Выведет: 128

# a = int('0128', 0)     # Вызов с двумя аргументами: строка с ведущим нулём и целое число 0. ValueError: invalid literal for int() with base 0: '0128'

a = int('0x989680', 0)   # Вызов с двумя аргументами: строка с префиксом 0x и целое число 0
print(a)                 # Выведет: 10000000

a = int('989680', 16)  # Вызов с двумя аргументами: строка без префикса 0x и целое число 16, информирующее о системе счисления
print(a)                 # Выведет: 10000000

# a = int('0x989680')    # Вызов с одним аргументом: строка с префиксом 0x. ValueError: invalid literal for int() with base 10: '0x989680'

b = decimal.Decimal(128.123456789)  # Инициализация числа типа decimal.Decimal
print(type(b))                      # Выводим тип объекта, связанного с переменной b. Выведет: <class 'decimal.Decimal'>
print(b)                            # Выведет: 128.1234567889999880208051763474941253662109375
a = int(b)                          # Вызов с одним аргументом: передача числа типа decimal.Decimal
print(a)                            # Выведет: 128

b = fractions.Fraction(10, 6)       # Инициализация числа типа fractions.Fraction
print(type(b))                      # Выводим тип объекта, связанного с переменной b. Выведет: <class 'fractions.Fraction'>
print(b)                            # Выведет: 5/3
a = int(b)                          # Вызов с одним аргументом: передача числа типа fractions.Fraction
print(a)                            # Выведет: 1
